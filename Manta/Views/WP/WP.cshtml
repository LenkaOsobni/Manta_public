@using Manta_dev_ViewModel
@model WP_ViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "WP";
}


<html>
<head>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/select2.min.js" type="text/javascript"></script>
    <script src="~/Scripts/sort.js" type="text/javascript"></script>
    <link href="~/Content/css/select2.min.css" rel="stylesheet" />
    <link href="~/Content/MyTheme.css" rel="stylesheet" />

</head>
<body>
    <div>
        <div>
            <table class="table_Calendar">
                <!--kalendar-->
                <tr>
                    <td width="200px" style=" text-align:center">
                        <div style="font-size: xx-large">
                            REL @Model.DataCollection_Settings_Name_Column.Where(w => w.User == "All").First().Current_Release
                        </div>
                    </td>
                    <td width="1000px">
                        <br />
                        <!--
                    Systémové testy:
                    @if (@Model.SysFrom == "null")
                    {
                        @Model.Unknow
                    }
                    else
                    {
                        @Model.SysFrom
                    }
                    &#8211
                    @if (@Model.SysTo == "null")
                    {
                        @Model.Unknow
                    }
                    else
                    {
                        @Model.SysTo
                    }
                    <br>
                    -->
                        Integrační testy:
                        @if (@Model.IntFrom == "null")
                        {
                            @Model.Unknow
                        }
                        else
                        {
                            @Model.IntFrom
                        }
                        &#8211
                        @if (@Model.IntTo == "null")
                        {
                            @Model.Unknow
                        }
                        else
                        {
                            @Model.IntTo
                        }
                        <br>
                        Regresní testy:
                        @if (@Model.RegFrom == "null")
                        {
                            @Model.Unknow
                        }
                        else
                        {
                            @Model.RegFrom
                        }
                        &#8211
                        @if (@Model.RegTo == "null")
                        {
                            @Model.Unknow
                        }
                        else
                        {
                            @Model.RegTo
                        }
                        <br>
                        Nasazení na produkci:
                        @if (@Model.DeployProd == "null")
                        {
                            @Model.Unknow
                        }
                        else
                        {
                            @Model.DeployProd
                        }
                    </td>
                    <td width="60px">

                        @if (Model.IsAdmin || Model.IsEditor)
                        {
                            <button onclick="location.href='@Url.Action( "UpdateWPs", "Update")';return false;" style="background-color:lightgray; border-color:whitesmoke; height:25px; width:100px"><B>Aktualizace</B></button>
                        }
                        <br>
                        <button onclick="location.href='@Url.Action( "Export", "WP")';return false;" style="background-color:lightgray; border-color:whitesmoke; height:25px; width:100px; margin-top:15px;"><B>Export</B></button>
                    </td>
                </tr>
            </table>
        </div>

        <div class="WP_div">
            <table class="WP_table">
                <thead class="WP_thread">
                    <tr>
                        <th class="WP_th" id="_header">
                            @if (Model.IsAdmin)
                            {
                            <a href='@Url.Action("WP_Add", "WP")'>
                                         <img src="~/img/Add.png" style="width:30px" />
                            </a>

                                
                            }
                        </th>

                        <th class="WP_th" id="2_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_1</th>
                        <th class="WP_th" id="3_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_2</th>
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_3_Show) == true) ||
                             (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_3_Show) == true) ||
                             (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_3_Show) == true)
                             )
                        {
                            <th class="WP_th" id="4_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_3</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_4_Show) == true) ||
                             (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_4_Show) == true) ||
                             (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_4_Show) == true)
                             )
                        {
                            <th class="WP_th" id="5_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_4</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_5_Show) == true) ||
                            (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_5_Show) == true) ||
                            (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_5_Show) == true)
                            )
                        {
                            <th class="WP_th" id="6_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_5</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_6_Show) == true) ||
                             (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_6_Show) == true) ||
                             (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_6_Show) == true)
                            )
                        {
                            <th class="WP_th" id="7_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_6</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_7_Show) == true) ||
                            (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_7_Show) == true) ||
                            (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_7_Show) == true)
                            )
                        {
                            <th class="WP_th" id="8_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_7</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_8_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_8_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_8_Show) == true)
                        )
                        {
                            <th class="WP_th" id="9_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_8</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_9_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_9_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_9_Show) == true)
                        )
                        {
                            <th class="WP_th" id="10_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_9</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_10_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_10_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_10_Show) == true)
                        )
                        {
                            <th class="WP_th" id="11_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_10</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_11_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_11_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_11_Show) == true)
                        )
                        {
                            <th class="WP_th" id="12_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_11</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_12_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_12_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_12_Show) == true)
                        )
                        {
                            <th class="WP_th" id="13_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_12</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_13_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_13_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_13_Show) == true)
                        )
                        {
                            <th class="WP_th" id="14_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_13</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_14_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_14_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_14_Show) == true)
                        )
                        {
                            <th class="WP_th" id="15_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_14</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_15_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_15_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_15_Show) == true)
                        )
                        {
                            <th class="WP_th" id="16_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_15</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_16_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_16_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_16_Show) == true)
                        )
                        {
                            <th class="WP_th" id="17_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_16</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_17_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_17_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_17_Show) == true)
                        )
                        {
                            <th class="WP_th" id="18_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_17</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_18_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_18_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_18_Show) == true)
                        )
                        {
                            <th class="WP_th" id="19_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_18</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_19_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_19_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_19_Show) == true)
                        )
                        {
                            <th class="WP_th" id="20_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_19</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_20_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_20_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_20_Show) == true)
                        )
                        {
                            <th class="WP_th" id="21_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_20</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_21_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_21_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_21_Show) == true)
                        )
                        {
                            <th class="WP_th" id="22_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_21</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_22_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_22_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_22_Show) == true)
                        )
                        {
                            <th class="WP_th" id="23_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_22</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_23_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_23_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_23_Show) == true)
                        )
                        {
                            <th class="WP_th" id="24_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_23</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_24_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_24_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_24_Show) == true)
                        )
                        {
                            <th class="WP_th" id="25_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_24</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_25_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_25_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_25_Show) == true)
                        )
                        {
                            <th class="WP_th" id="26_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_25</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_26_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_26_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_26_Show) == true)
                        )
                        {
                            <th class="WP_th" id="27_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_26</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_27_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_27_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_27_Show) == true)
                        )
                        {
                            <th class="WP_th" id="28_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_27</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_28_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_28_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_28_Show) == true)
                        )
                        {
                            <th class="WP_th" id="29_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_28</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_29_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_29_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_29_Show) == true)
                        )
                        {
                            <th class="WP_th" id="30_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_29</th>
                        }
                        @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_30_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_30_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_30_Show) == true)
                        )
                        {
                            <th class="WP_th" id="31_header">@Model.DataCollection_Settings_Name_Column.First().Name_Column_30</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.DataCollection_Aktive_WP)
                    {
                        <tr>
                            @if (Model.IsAdmin || Model.IsEditor)
                            {
                                <th class="WP_body_th" style="font-size: 17px; vertical-align:middle">
                                    @Html.ActionLink("Edit", "WP_Edit", new { id = item.Id })
                                </th>
                            }
                            else
                            {
                                <th class="WP_body_th" style="font-size: 17px; vertical-align:middle">
                                    Edit
                                </th>
                            }
                            <th class="WP_body_th">
                                <span style="white-space: pre-line">
                                    @Convert.ToString(item.Column_1)
                                </span>
                            </th>
                            <th class="WP_body_th">
                                <span style="white-space: pre-line">
                                    @Convert.ToString(item.Column_2)
                                </span>
                            </th>
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_3_Show) == true) ||
                             (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_3_Show) == true) ||
                             (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_3_Show) == true)
                             )
                            {
                                <td class="WP_td" style="background-color:gainsboro">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_3)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_4_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_4_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_4_Show) == true)
                                 )
                            {
                                <td class="WP_td" style="background-color:gainsboro">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_4)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_5_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_5_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_5_Show) == true)
                                 )
                            {
                                <td class="WP_td" style="background-color:@Convert.ToString(item.Color_1)">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_5)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_6_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_6_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_6_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_6)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_7_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_7_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_7_Show) == true)
                                 )
                            {
                                <td class="WP_td" style="background-color:gainsboro">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_7)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_8_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_8_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_8_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_8)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_9_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_9_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_9_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_9)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_10_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_10_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_10_Show) == true)
                                 )
                            {
                                <td class="WP_td" style="background-color:@Convert.ToString(item.Color_2)">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_10)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_11_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_11_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_11_Show) == true)
                                 )
                            {
                                <td class="WP_td_INT" style="background-color:@Convert.ToString(item.Color_3)">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_11)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_12_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_12_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_12_Show) == true)
                                 )
                            {
                                <td class="WP_td_UAT" style="background-color:@Convert.ToString(item.Color_4)">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_12)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_13_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_13_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_13_Show) == true)
                                 )
                            {
                                <td class="WP_td_POZ" style="background-color:@Convert.ToString(item.Color_5)">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_13)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_14_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_14_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_14_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_14)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_15_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_15_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_15_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_15)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_16_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_16_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_16_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_16)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_17_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_17_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_17_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_17)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_18_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_18_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_18_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_18)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_19_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_19_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_19_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_19)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_20_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_20_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_20_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_20)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_21_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_21_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_21_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_21)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_22_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_22_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_22_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_22)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_23_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_23_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_23_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_23)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_24_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_24_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_24_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_24)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_25_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_25_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_25_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_25)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_26_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_26_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_26_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_26)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_27_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_27_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_27_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_27)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_28_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_28_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_28_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_28)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_29_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_29_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_29_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_29)
                                    </span>
                                </td>
                            }
                            @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Column_30_Show) == true) ||
                                 (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Column_30_Show) == true) ||
                                 (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Column_30_Show) == true)
                                 )
                            {
                                <td class="WP_td">
                                    <span style="white-space: pre-line">
                                        @Convert.ToString(item.Column_30)
                                    </span>
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="clear"></div>
        <br />
        <div>
            <text class="isFilter" style="color:red; font-size:larger"></text>
            <button class="btn_Filter" style="background-color:lightgray; border-color:whitesmoke; height:25px; width:100px"><B>Filter</B></button>
            <button class="btn_Filter_null" type="button" style="background-color:lightgray; border-color:whitesmoke; height:25px; width:100px" onclick="location.href='@Url.Action("DeleteFilter", "WP")'"><B>Zrušit filter</B></button>
            <p></p>
        </div>
        <table class="table_Filter">
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_1_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_1_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_1_Show) == true)
                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_1  </th>

                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_1_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_1_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_1_Show) == true)
                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_1_Filter">
                    </td>
                    <td>
                        <select class="Column_1_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_2_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_2_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_2_Show) == true)
                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_2</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_2_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_2_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_2_Show) == true)
                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_2_Filter">
                    </td>
                    <td>
                        <select class="Column_2_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_3_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_3_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_3_Show) == true)
                                                                                                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_3</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_3_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_3_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_3_Show) == true)
                                                                                                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_3_Filter">
                    </td>
                    <td>
                        <select class="Column_3_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_4_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_4_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_4_Show) == true)
                                                                                                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_4</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_4_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_4_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_4_Show) == true)
                                                                                                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_4_Filter">
                    </td>
                    <td>
                        <select class="Column_4_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_5_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_5_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_5_Show) == true)
                                                                                                )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_5</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_5_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_5_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_5_Show) == true)
                                                                                                    )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_5_Filter">
                    </td>
                    <td>
                        <select class="Column_5_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_6_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_6_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_6_Show) == true)
                                                                                            )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_6</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_6_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_6_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_6_Show) == true)
                                                                                                )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_6_Filter">
                    </td>
                    <td>
                        <select class="Column_6_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_7_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_7_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_7_Show) == true)
                                                                                        )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_7</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_7_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_7_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_7_Show) == true)
                                                                                            )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_7_Filter">
                    </td>
                    <td>
                        <select class="Column_7_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_8_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_8_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_8_Show) == true)
                                                                                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_8</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_8_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_8_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_8_Show) == true)
                                                                                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_8_Filter">
                    </td>
                    <td>
                        <select class="Column_8_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_9_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_9_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_9_Show) == true)
                                                                                )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_9</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_9_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_9_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_9_Show) == true)
                                                                                    )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_9_Filter">
                    </td>
                    <td>
                        <select class="Column_9_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_10_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_10_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_10_Show) == true)
                                                                            )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_10</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_10_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_10_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_10_Show) == true)
                                                                                )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_10_Filter">
                    </td>
                    <td>
                        <select class="Column_10_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_11_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_11_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_11_Show) == true)
                                                                        )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_11</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_11_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_11_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_11_Show) == true)
                                                                            )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_11_Filter">
                    </td>
                    <td>
                        <select class="Column_11_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_12_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_12_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_12_Show) == true)
                                                                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_12</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_12_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_12_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_12_Show) == true)
                                                                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_12_Filter">
                    </td>
                    <td>
                        <select class="Column_12_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_13_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_13_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_13_Show) == true)
                                                                )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_13</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_13_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_13_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_13_Show) == true)
                                                                    )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_13_Filter">
                    </td>
                    <td>
                        <select class="Column_13_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_14_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_14_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_14_Show) == true)
                                                            )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_14</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_14_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_14_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_14_Show) == true)
                                                                )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_14_Filter">
                    </td>
                    <td>
                        <select class="Column_14_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_15_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_15_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_15_Show) == true)
                                                        )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_15</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_15_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_15_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_15_Show) == true)
                                                            )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_15_Filter">
                    </td>
                    <td>
                        <select class="Column_15_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_16_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_16_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_16_Show) == true)
                                                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_16</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_16_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_16_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_16_Show) == true)
                                                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_16_Filter">
                    </td>
                    <td>
                        <select class="Column_16_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_17_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_17_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_17_Show) == true)
                                                )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_17</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_17_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_17_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_17_Show) == true)
                                                    )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_17_Filter">
                    </td>
                    <td>
                        <select class="Column_17_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_18_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_18_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_18_Show) == true)
                                            )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_18</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_18_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_18_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_18_Show) == true)
                                                )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_18_Filter">
                    </td>
                    <td>
                        <select class="Column_18_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_19_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_19_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_19_Show) == true)
                                        )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_19</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_19_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_19_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_19_Show) == true)
                                            )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_19_Filter">
                    </td>
                    <td>
                        <select class="Column_19_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_20_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_20_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_20_Show) == true)
                                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_20</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_20_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_20_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_20_Show) == true)
                                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_20_Filter">
                    </td>
                    <td>
                        <select class="Column_20_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_21_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_21_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_21_Show) == true)
                                )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_21</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_21_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_21_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_21_Show) == true)
                                    )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_21_Filter">
                    </td>
                    <td>
                        <select class="Column_21_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_22_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_22_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_22_Show) == true)
                            )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_22</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_22_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_22_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_22_Show) == true)
                                )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_22_Filter">
                    </td>
                    <td>
                        <select class="Column_22_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_23_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_23_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_23_Show) == true)
                        )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_23</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_23_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_23_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_23_Show) == true)
                            )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_23_Filter">
                    </td>
                    <td>
                        <select class="Column_23_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_24_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_24_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_24_Show) == true)
                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_24</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_24_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_24_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_24_Show) == true)
                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_24_Filter">
                    </td>
                    <td>
                        <select class="Column_24_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_25_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_25_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_25_Show) == true)
                                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_25</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_25_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_25_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_25_Show) == true)
                                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_25_Filter">
                    </td>
                    <td>
                        <select class="Column_25_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_26_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_26_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_26_Show) == true)
                                    )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_26</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_26_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_26_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_26_Show) == true)
                                        )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_26_Filter">
                    </td>
                    <td>
                        <select class="Column_26_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_27_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_27_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_27_Show) == true)
                                )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_27</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_27_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_27_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_27_Show) == true)
                                    )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_27_Filter">
                    </td>
                    <td>
                        <select class="Column_27_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_28_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_28_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_28_Show) == true)
                            )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_28</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_28_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_28_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_28_Show) == true)
                                )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_28_Filter">
                    </td>
                    <td>
                        <select class="Column_28_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_29_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_29_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_29_Show) == true)
                            )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_29</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_29_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_29_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_29_Show) == true)
                                )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_29_Filter">
                    </td>
                    <td>
                        <select class="Column_29_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
            <tr>
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_30_Show) == true) ||
                     (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_30_Show) == true) ||
                     (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_30_Show) == true)
                        )
                {
                    <th class="Filter_th">@Model.DataCollection_Settings_Name_Column.First().Name_Column_30</th>
                }
                @if (((Model.DataCollection_Settings_Group.Where(r => r.User_Group == "All").FirstOrDefault().Filter_Column_30_Show) == true) ||
                        (Model.IsAdmin && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Admin").FirstOrDefault().Filter_Column_30_Show) == true) ||
                        (Model.IsEditor && (Model.DataCollection_Settings_Group.Where(r => r.User_Group == "Editor").FirstOrDefault().Filter_Column_30_Show) == true)
                            )
                {
                    <td class="Filter_All">
                        Vše <input type="checkbox" class="chbox" id="checkbox_30_Filter">
                    </td>
                    <td>
                        <select class="Column_30_filter" multiple="multiple"></select>
                    </td>
                }
            </tr>
        </table>
        <div>
            <p></p>
            <text class="isFilter" style="color:red; font-size:larger"></text>
            <button class="btn_Filter" style="background-color:lightgray; border-color:whitesmoke; height:25px; width:100px"><B>Filter</B></button>


            <button class="btn_Filter_null" type="button" style="background-color:lightgray; border-color:whitesmoke; height:25px; width:100px" onclick="location.href='@Url.Action("DeleteFilter", "WP")'"><B>Zrušit filter</B></button>
        </div>
    </div>
</body>
</html>



<script>

    //duplikate hodnoyty výběru null a "" , zobrazí jen jednu možnost (Controler pak opět hledá obě). => Zamezení duplicity "<prázdné>"
    var duplikate = false;


 /*   $(".btn_Filter_null").on('click', function () {
         $.ajax({
                    dataType: 'html',
             url: "@(Url.Action("DeleteFilter", "WP"))",
            type: "GET",
             traditional: true,
             data: {},
            success: function (response) {
                $("body").html(response);
             }
         });
    });*/

    $(".btn_Filter").on('click', function () {
        var Column1F = $(".Column_1_filter").val();
        var Column2F = $(".Column_2_filter").val();
        var Column3F = $(".Column_3_filter").val();
        var Column4F = $(".Column_4_filter").val();
        var Column5F = $(".Column_5_filter").val();
        var Column6F = $(".Column_6_filter").val();
        var Column7F = $(".Column_7_filter").val();
        var Column8F = $(".Column_8_filter").val();
        var Column9F = $(".Column_9_filter").val();
        var Column10F = $(".Column_10_filter").val();
        var Column11F = $(".Column_11_filter").val();
        var Column12F = $(".Column_12_filter").val();
        var Column13F = $(".Column_13_filter").val();
        var Column14F = $(".Column_14_filter").val();
        var Column15F = $(".Column_15_filter").val();
        var Column16F = $(".Column_16_filter").val();
        var Column17F = $(".Column_17_filter").val();
        var Column18F = $(".Column_18_filter").val();
        var Column19F = $(".Column_19_filter").val();
        var Column20F = $(".Column_20_filter").val();
        var Column21F = $(".Column_21_filter").val();
        var Column22F = $(".Column_22_filter").val();
        var Column23F = $(".Column_23_filter").val();
        var Column24F = $(".Column_24_filter").val();
        var Column25F = $(".Column_25_filter").val();
        var Column26F = $(".Column_26_filter").val();
        var Column27F = $(".Column_27_filter").val();
        var Column28F = $(".Column_28_filter").val();
        var Column29F = $(".Column_29_filter").val();
        var Column30F = $(".Column_30_filter").val();
        $.ajax({
            dataType: 'html',
            url: "@(Url.Action("WP", "WP"))",
            type: "GET",
            traditional: true,
            data: {
                Column_1_Filter: Column1F, Column_2_Filter: Column2F, Column_3_Filter: Column3F,
                Column_4_Filter: Column4F, Column_5_Filter: Column5F, Column_6_Filter: Column6F,
                Column_7_Filter: Column7F, Column_8_Filter: Column8F, Column_9_Filter: Column9F,
                Column_10_Filter: Column10F, Column_11_Filter: Column11F, Column_12_Filter: Column12F,
                Column_13_Filter: Column13F, Column_14_Filter: Column14F, Column_15_Filter: Column15F,
                Column_16_Filter: Column16F, Column_17_Filter: Column17F, Column_18_Filter: Column18F,
                Column_19_Filter: Column19F, Column_20_Filter: Column20F, Column_21_Filter: Column21F,
                Column_22_Filter: Column22F, Column_23_Filter: Column23F, Column_24_Filter: Column24F,
                Column_25_Filter: Column25F, Column_26_Filter: Column26F, Column_27_Filter: Column27F,
                Column_28_Filter: Column28F, Column_29_Filter: Column29F, Column_30_Filter: Column30F
            },
            success: function (response) {
                $("body").html(response);
            },
            complete: function () {
                makeAllSortable();
            $(".isFilter").text("Je použit filter");
            
            }
        });
    });

    window.onload = function () {
        makeAllSortable();
    };

    $(document).ready(function () {
        $("select.Column_1_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn1List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_1_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn1", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_1_filter').append(options).trigger('change');
                    $(".isFilter").text("Je použit filter");
                }
            });

        $("select.Column_2_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn2List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_2_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn2", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_2_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_3_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn3List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_3_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn3", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_3_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_4_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn4List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_4_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn4", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_4_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_5_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn5List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_5_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn5", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_5_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_6_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn6List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_6_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn6", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_6_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_7_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn7List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_7_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn7", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_7_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_8_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn8List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_8_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn8", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_8_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_9_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn9List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_9_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn9", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_9_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_10_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn10List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_10_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn10", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_10_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_11_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn11List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_11_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn11", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_11_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_12_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn12List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_12_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn12", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_12_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_13_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn13List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_13_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn13", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_13_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_14_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn14List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_14_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn14", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_14_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_15_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn15List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_15_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn15", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_15_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_16_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn16List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_16_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn16", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_16_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_17_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn17List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_17_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn17", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_17_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_18_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn18List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_18_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn18", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_18_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_19_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn19List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_19_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn19", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_19_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_20_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn20List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_20_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn20", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_20_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_21_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn21List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_21_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn21", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_21_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_22_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn22List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_22_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn22", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_22_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_23_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn23List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_23_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn23", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_23_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_24_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn24List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_24_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn24", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_24_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_25_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn25List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_25_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn25", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_25_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_26_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn26List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_26_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn26", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_26_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_27_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn27List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_27_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn27", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_27_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_28_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn28List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_28_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn28", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_28_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_29_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn29List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_29_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn29", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_29_filter').append(options).trigger('change');
                    
                }
            });

        $("select.Column_30_filter").select2({
            theme: "classic",
            ajax: {
                allowClear: true,
                url: "/WP/GetColumn30List",
                dataType: "json",
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    duplikate = false;
                    var results = [];
                    $.each(data, function (i, item) {
                        if (item.text == "" || item.text == null) {
                            if (!duplikate) {
                                duplikate = true;
                                results.push({
                                    id: item.id,
                                    text: "<prázdné>"
                                });
                            }
                            else duplikate = false;
                        }
                        else {
                            results.push({
                                id: item.id,
                                text: item.text
                            });
                        }
                    });
                    return {
                        results: results
                    };
                },
                complete: function () {
                    $("#checkbox_30_Filter").prop("checked", false);
                }
            }
        });

        $.ajax({
                dataType: 'json',
                url: "@(Url.Action("GetOptionColumn30", "WP"))",
                type: "GET",
                traditional: true,
            }).then(function (response) {
                if (response[0].id != 0)
                {
                    var options = [];
                    $.each(response, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            options.push(new Option("<prázdné>", item.id, true, true));
                        }
                        else
                        {
                            options.push(new Option(item.text, item.id, true, true));
                        }
                    });
                    $('select.Column_30_filter').append(options).trigger('change');
                    
                }
            });

    });

    $("#checkbox_1_Filter").click(function (e) {
        $.ajax({
            url: "/WP/GetColumn1List",
            dataType: 'json',
            data: function (params) {
                return {
                    searchTerm: params.term
                };
            },
            processResults: function (data) {
                return {
                    results: $.map(data, function (item) {
                        return {
                            text: item.text,
                            id: item.id
                        }
                    })
                };
            }
        }).done(function (data) {
         duplikate = false;
            var select2 = $('select.Column_1_filter'),
                selectedValues = [];
            select2.empty();
            if ($('#checkbox_1_Filter').is(':checked')) {
                 $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                select2.val(selectedValues).trigger('change.select2');
            }
        });
    });

        $("#checkbox_2_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn2List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
            duplikate = false;
                var select2 = $('select.Column_2_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_2_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_3_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn3List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_3_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_3_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_4_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn4List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_4_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_4_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_5_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn5List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_5_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_5_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_6_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn6List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_6_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_6_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_7_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn7List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_7_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_7_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_8_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn8List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_8_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_8_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_9_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn9List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_9_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_9_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_10_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn10List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_10_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_10_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_11_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn11List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_11_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_11_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_12_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn12List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_12_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_12_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_13_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn13List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_13_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_13_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_14_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn14List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_14_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_14_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_15_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn15List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_15_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_15_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_16_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn16List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_16_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_16_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_17_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn17List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_17_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_17_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_18_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn18List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_18_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_18_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_19_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn19List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_19_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_19_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_20_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn20List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_20_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_20_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prázdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_21_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn21List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_21_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_21_Filter').is(':checked'))
                {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_22_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn22List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_22_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_22_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_23_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn23List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_23_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_23_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_24_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn24List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_24_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_24_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_25_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn25List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_25_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_25_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_26_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn26List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_26_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_26_Filter').is(':checked')) {
                   $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });


        $("#checkbox_27_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn27List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_27_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_27_Filter').is(':checked')) {
                    $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_28_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn28List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_28_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_28_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

        $("#checkbox_29_Filter").click(function (e) {
            $.ajax({
                url: "/WP/GetColumn29List",
                dataType: 'json',
                data: function (params) {
                    return {
                        searchTerm: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.text,
                                id: item.id
                            }
                        })
                    };
                }
            }).done(function (data) {
             duplikate = false;
                var select2 = $('select.Column_29_filter'),
                    selectedValues = [];
                select2.empty();
                if ($('#checkbox_29_Filter').is(':checked')) {
                     $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                    select2.val(selectedValues).trigger('change.select2');
                }
            });
        });

    $("#checkbox_30_Filter").click(function (e) {
        $.ajax({
            url: "/WP/GetColumn30List",
            dataType: 'json',
            data: function (params) {
                return {
                    searchTerm: params.term
                };
            },
            processResults: function (data) {
                return {
                    results: $.map(data, function (item) {
                        return {
                            text: item.text,
                            id: item.id
                        }
                    })
                };
            }
        }).done(function (data) {
             duplikate = false;
            var select2 = $('select.Column_30_filter'),
                selectedValues = [];
            select2.empty();
            if ($('#checkbox_30_Filter').is(':checked')) {
                 $.each(data, function (i, item)
                    {
                        if (item.text == "" || item.text == null)
                        {
                            if (!duplikate) {
                                duplikate = true;
                                select2.append($('<option>', {
                                    value: item.id,
                                    text: "<prazdné>"
                                }));
                                selectedValues.push(item.id);
                            }
                            else duplikate = false;
                        }
                        else {

                            select2.append($('<option>', {
                                value: item.id,
                                text: item.text
                            }));
                            selectedValues.push(item.id);
                        }
                    });
                select2.val(selectedValues).trigger('change.select2');
            }
        });
    });
</script>